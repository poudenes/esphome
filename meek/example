#########################################################
# Below all fixed settings for specific PCB
#########################################################
substitutions:
  devicename: meek-kitchen
  friendly: ESPHome kitchen
  motion_sensor: binary_sensor.kitchen_detection
  ip: 192.168.100.206
  touch_power: GPIO16 # (D0)
  neopixel: GPIO02 #(D4)
  gpio_touch1: GPIO14 # (D5)
  gpio_touch2: GPIO12 # (D6)
  gpio_touch3: GPIO13 # (D7)
  gpio_relay1: GPIO05 # (D1)
  gpio_relay2: GPIO4 # (D2)
  gpio_relay3: GPIO15 # (D8)

#########################################################
# Everything below can be copy/paste without problem
#########################################################
esphome:
  name: ${devicename}
  on_boot:
    priority: 600
    then:
      - switch.turn_on: touch_power

esp8266:
  board: esp01_1m
  restore_from_flash: true

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 0s
  fast_connect: true
  manual_ip:
    static_ip: ${ip}
    gateway: 192.168.100.1
    subnet: 255.255.255.0
    dns1: 192.168.100.1
  ap:
    ssid: ${devicename}
    password: !secret password
    channel: 4

api:
  encryption:
    key: !secret api_key
  reboot_timeout: 15min

time:
  - platform: homeassistant
    id: homeassistant_time

preferences:
  flash_write_interval: 1min
  
logger:
  level: DEBUG
  
ota:
  safe_mode: true
  password: !secret password

button:
  - platform: factory_reset
    name: "${friendly} - reset"

sensor:
  - platform: wifi_signal
    name: "${friendly} - wifi Signal"
    update_interval: 5min

  - platform: uptime
    name: "${friendly} - Uptime"
    update_interval: 5min

light:
  - platform: neopixelbus
    default_transition_length: 0s
    type: GRB
    variant: 800KBPS
    pin: ${neopixel}
    num_leds: 1 # use 1 for 1 LED, use 2 for 2 LEDS and use 3 for 3 LEDS
    name: "${friendly} - Neopixel"
    restore_mode: ALWAYS_ON
    id: neopixel

#########################################################
# USE BELOW WHEN YOU HAVE A 1 BUTTON SWITCH
#########################################################
  - platform: partition
    name: "${friendly} partition - neopixel1"
    restore_mode: ALWAYS_ON
    default_transition_length: 0s
    id: neopixel1
    segments:
      - id: neopixel
        from: 0
        to: 0

#########################################################
# USE BELOW WHEN YOU HAVE A 2 BUTTON SWITCH
#########################################################
#   - platform: partition
#     name: "${friendly} partition - neopixel2"
#     restore_mode: ALWAYS_ON
#     default_transition_length: 0s
#     id: neopixel2
#     segments:
#       - id: neopixel
#         from: 1
#         to: 1

#########################################################
# USE BELOW WHEN YOU HAVE A 3 BUTTON SWITCH
# #########################################################
#   - platform: partition
#     name: "${friendly} partition - neopixel3"
#     restore_mode: ALWAYS_ON
#     default_transition_length: 0s
#     id: neopixel3
#     segments:
#       - id: neopixel
#         from: 2
#         to: 2

switch:
  - platform: gpio
    pin: ${touch_power}
    name: "${friendly} - Touch 1 power"
    icon: mdi:electric-switch
    id: touch_power

  - platform: safe_mode
    name: "${friendly} - safe mode"

#########################################################
# USE BELOW WHEN YOU HAVE A 1 BUTTON SWITCH MODULE
#########################################################
  - platform: template
    name: "${friendly} - Switch 1"
    restore_state: true
    id: switch1
    optimistic: true
    icon: mdi:nintendo-switch

#########################################################
# USE BELOW WHEN YOU HAVE A 2 BUTTON SWITCH MODULE
#########################################################
#   - platform: template
#     name: "${friendly} - switch 2"
#     restore_state: yes
#     id: switch2
#     optimistic: true
#     icon: mdi:nintendo-switch

#########################################################
# USE BELOW WHEN YOU HAVE A 3 BUTTON SWITCH MODULE
#########################################################
#   - platform: template
#     name: "${friendly} - switch 3"
#     restore_state: yes
#     id: switch3
#     optimistic: true
#     icon: mdi:nintendo-switch

#########################################################
# USE BELOW WHEN YOU HAVE A 1 BUTTON SWITCH MODULE
#########################################################
  - platform: gpio
    pin: ${gpio_relay1}
    name: "${friendly} - relay 1"
    icon: mdi:electric-switch

#########################################################
# USE BELOW WHEN YOU HAVE A 2 BUTTON SWITCH MODULE
#########################################################
#   - platform: gpio
#     pin: ${gpio_relay2}
#     name: "${friendly} - relay 2"
#     icon: mdi:electric-switch

#########################################################
# USE BELOW WHEN YOU HAVE A 3 BUTTON SWITCH MODULE
#########################################################
#   - platform: gpio
#     pin: ${gpio_relay3}
#     name: "${friendly} - relay 3"
#     icon: mdi:electric-switch

binary_sensor:
#########################################################
# USE BELOW WHEN YOU HAVE A 1 BUTTON SWITCH MODULE
#########################################################
  - platform: gpio
    pin: ${gpio_touch1}
    name: "${friendly} - Touch 1"
    icon: mdi:gesture-tap-button
    on_press:
      - switch.toggle: switch1

#########################################################
# USE BELOW WHEN YOU HAVE A 2 BUTTON SWITCH MODULE
#########################################################
#   - platform: gpio
#     pin: ${gpio_touch2}
#     name: "${friendly} - touch 2"
#     icon: mdi:gesture-tap-button
#     on_press:
#       - switch.toggle: switch2

#########################################################
# USE BELOW WHEN YOU HAVE A 3 BUTTON SWITCH MODULE
#########################################################
#   - platform: gpio
#     pin: ${gpio_touch3}
#     name: "${friendly} - touch 3"
#     icon: mdi:gesture-tap-button
#     on_press:
#       - switch.toggle: switch3

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${friendly} - ip"
      icon: mdi:lan
    ssid:
      name: "${friendly} - ssid"
      icon: mdi:lan
    bssid:
      name: "${friendly} - bssid"
      icon: mdi:lan
    mac_address:
      name: "${friendly} - mac"
      icon: mdi:lan

  - platform: version
    name: "${friendly} - Version"
    hide_timestamp: true
  
#########################################################
# BELOW some sensors thats read info from Home Assistant
# use can use this in automations inside ESPHome
#########################################################
  - platform: homeassistant
    name: "Daytime"
    entity_id: input_boolean.scene_daytime
    id: "daytime"
    on_value:
      - if:
          condition:
            lambda: 'return id(daytime).state == "on";'
          then:
            - light.turn_on: # RED
                id: neopixel
                brightness: 100%
                red: 100%
                green: 0%
                blue: 0%

  - platform: homeassistant
    name: "Evening"
    entity_id: input_boolean.scene_evening
    id: "evening"
    on_value:
      then:
        - if:
            condition:
              lambda: 'return id(evening).state == "on";'
            then:
              - light.turn_on: # RED
                  id: neopixel
                  brightness: 100%
                  red: 100%
                  green: 0%
                  blue: 0%

  - platform: homeassistant
    name: "TV"
    entity_id: input_boolean.scene_tv
    id: "tv"
    on_value:
      then:
        - if:
            condition:
              lambda: 'return id(tv).state == "on";'
            then:
              - light.turn_on: # LIGHT BLUE
                  id: neopixel
                  brightness: 100%
                  red: 1%
                  green: 46%
                  blue: 99%

  - platform: homeassistant
    name: "AppleTV"
    entity_id: input_boolean.scene_appletv
    id: "appletv"
    on_value:
      then:
        - if:
            condition:
              lambda: 'return id(appletv).state == "on";'
            then:
              - light.turn_on: # YELLOW
                  id: neopixel
                  brightness: 100%
                  red: 100%
                  green: 100%
                  blue: 0%

  - platform: homeassistant
    name: "Kodi"
    entity_id: input_boolean.scene_kodi
    id: "kodi"
    on_value:
      then:
        - if:
            condition:
              lambda: 'return id(kodi).state == "on";'
            then:
              - light.turn_on: # PINK
                  id: neopixel
                  brightness: 100%
                  red: 100%
                  green: 0%
                  blue: 100%

  - platform: homeassistant
    name: "Nintendo"
    entity_id: input_boolean.scene_nintendo
    id: "nintendo"
    on_value:
      then:
        - if:
            condition:
              lambda: 'return id(nintendo).state == "on";'
            then:
              - light.turn_on: # PURPLE
                  id: neopixel
                  brightness: 100%
                  red: 57%
                  green: 17%
                  blue: 93%

  - platform: homeassistant
    name: "Goodnight"
    entity_id: input_boolean.scene_goodnight
    id: "goodnight"
    on_value:
      then:
        - if:
            condition:
              lambda: 'return id(goodnight).state == "on";'
            then:
              - light.turn_on: # RED
                  id: neopixel
                  brightness: 20%
                  red: 100%
                  green: 0%
                  blue: 0%
